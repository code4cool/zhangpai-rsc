/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"


@interface GetCountyByCityIdInput : NSObject <TBase, NSCoding> {
  int32_t __cityId;
  int32_t __size;
  int32_t __orderValue;
  NSString * __version;

  BOOL __cityId_isset;
  BOOL __size_isset;
  BOOL __orderValue_isset;
  BOOL __version_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=cityId, setter=setCityId:) int32_t cityId;
@property (nonatomic, getter=size, setter=setSize:) int32_t size;
@property (nonatomic, getter=orderValue, setter=setOrderValue:) int32_t orderValue;
@property (nonatomic, retain, getter=version, setter=setVersion:) NSString * version;
#endif

- (id) init;
- (id) initWithCityId: (int32_t) cityId size: (int32_t) size orderValue: (int32_t) orderValue version: (NSString *) version;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) cityId;
- (void) setCityId: (int32_t) cityId;
#endif
- (BOOL) cityIdIsSet;

#if !__has_feature(objc_arc)
- (int32_t) size;
- (void) setSize: (int32_t) size;
#endif
- (BOOL) sizeIsSet;

#if !__has_feature(objc_arc)
- (int32_t) orderValue;
- (void) setOrderValue: (int32_t) orderValue;
#endif
- (BOOL) orderValueIsSet;

#if !__has_feature(objc_arc)
- (NSString *) version;
- (void) setVersion: (NSString *) version;
#endif
- (BOOL) versionIsSet;

@end

@interface CountyOutput : NSObject <TBase, NSCoding> {
  int32_t __id;
  int32_t __cityId;
  NSString * __name;

  BOOL __id_isset;
  BOOL __cityId_isset;
  BOOL __name_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=id, setter=setId:) int32_t id;
@property (nonatomic, getter=cityId, setter=setCityId:) int32_t cityId;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
#endif

- (id) init;
- (id) initWithId: (int32_t) id cityId: (int32_t) cityId name: (NSString *) name;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) id;
- (void) setId: (int32_t) id;
#endif
- (BOOL) idIsSet;

#if !__has_feature(objc_arc)
- (int32_t) cityId;
- (void) setCityId: (int32_t) cityId;
#endif
- (BOOL) cityIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

@end

@interface GetCountyByCityIdOutput : NSObject <TBase, NSCoding> {
  NSMutableArray * __values;
  int32_t __returnCode;

  BOOL __values_isset;
  BOOL __returnCode_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=values, setter=setValues:) NSMutableArray * values;
@property (nonatomic, getter=returnCode, setter=setReturnCode:) int32_t returnCode;
#endif

- (id) init;
- (id) initWithValues: (NSMutableArray *) values returnCode: (int32_t) returnCode;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) values;
- (void) setValues: (NSMutableArray *) values;
#endif
- (BOOL) valuesIsSet;

#if !__has_feature(objc_arc)
- (int32_t) returnCode;
- (void) setReturnCode: (int32_t) returnCode;
#endif
- (BOOL) returnCodeIsSet;

@end

@interface GetRedisCountyAllByCityIdInput : NSObject <TBase, NSCoding> {
  int32_t __cityId;
  NSString * __version;

  BOOL __cityId_isset;
  BOOL __version_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=cityId, setter=setCityId:) int32_t cityId;
@property (nonatomic, retain, getter=version, setter=setVersion:) NSString * version;
#endif

- (id) init;
- (id) initWithCityId: (int32_t) cityId version: (NSString *) version;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) cityId;
- (void) setCityId: (int32_t) cityId;
#endif
- (BOOL) cityIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) version;
- (void) setVersion: (NSString *) version;
#endif
- (BOOL) versionIsSet;

@end

@interface GetRedisCountyAllByCityIdOutput : NSObject <TBase, NSCoding> {
  NSString * __json;
  int32_t __returnCode;

  BOOL __json_isset;
  BOOL __returnCode_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=json, setter=setJson:) NSString * json;
@property (nonatomic, getter=returnCode, setter=setReturnCode:) int32_t returnCode;
#endif

- (id) init;
- (id) initWithJson: (NSString *) json returnCode: (int32_t) returnCode;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) json;
- (void) setJson: (NSString *) json;
#endif
- (BOOL) jsonIsSet;

#if !__has_feature(objc_arc)
- (int32_t) returnCode;
- (void) setReturnCode: (int32_t) returnCode;
#endif
- (BOOL) returnCodeIsSet;

@end

@protocol RegionService <NSObject>
- (GetCountyByCityIdOutput *) getCountyByCityId: (GetCountyByCityIdInput *) input;  // throws TException
- (GetRedisCountyAllByCityIdOutput *) getRedisCountyAllByCityId: (GetRedisCountyAllByCityIdInput *) input;  // throws TException
@end

@interface RegionServiceClient : NSObject <RegionService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface RegionServiceProcessor : NSObject <TProcessor> {
  id <RegionService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithRegionService: (id <RegionService>) service;
- (id<RegionService>) service;
@end

@interface RegionServiceConstants : NSObject {
}
@end
