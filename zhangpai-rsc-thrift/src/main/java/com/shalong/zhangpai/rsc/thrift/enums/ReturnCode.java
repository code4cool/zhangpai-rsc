/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.shalong.zhangpai.rsc.thrift.enums;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ReturnCode implements org.apache.thrift.TEnum {
  UNKNOWN(100),
  OK(200),
  CLINET_ERROR(400),
  SERVER_ERROR(500),
  SERVER_BUSY(501),
  MISSING_ARG(401),
  C_EXCEPTION(600),
  C_DATANULL(601),
  C_IOEXCEPTION(602),
  P_EXCEPTION(900),
  S_RULES_ERROR(800),
  S_USER_NOT_FOUND(801),
  S_MOBILE_ILLEGAL(802),
  S_SECRET_ILLEGAL(903),
  S_SECRET_TIMEOUT(902),
  S_APPKEY_NOT_FOUND(904);

  private final int value;

  private ReturnCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ReturnCode findByValue(int value) { 
    switch (value) {
      case 100:
        return UNKNOWN;
      case 200:
        return OK;
      case 400:
        return CLINET_ERROR;
      case 500:
        return SERVER_ERROR;
      case 501:
        return SERVER_BUSY;
      case 401:
        return MISSING_ARG;
      case 600:
        return C_EXCEPTION;
      case 601:
        return C_DATANULL;
      case 602:
        return C_IOEXCEPTION;
      case 900:
        return P_EXCEPTION;
      case 800:
        return S_RULES_ERROR;
      case 801:
        return S_USER_NOT_FOUND;
      case 802:
        return S_MOBILE_ILLEGAL;
      case 903:
        return S_SECRET_ILLEGAL;
      case 902:
        return S_SECRET_TIMEOUT;
      case 904:
        return S_APPKEY_NOT_FOUND;
      default:
        return null;
    }
  }
}
